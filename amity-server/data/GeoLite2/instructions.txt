create table geolite2_country_locations_en
(
	geoname_id int primary key,
	locale_code char(2) not null,
	continent_code char(2) not null,
	continent_name varchar(20) not null,
	country_iso_code char(2) not null,
	country_name varchar(128) not null
);

load data local infile 'GeoLite2-Country-Locations-en.csv' into table geolite2_country_locations_en character set utf8 columns terminated by ',' optionally enclosed by '"'  lines terminated by '\n' ignore 1 lines;


create table geolite2_city_locations_en
(
	geoname_id int primary key,
	locale_code char(2) not null,
	continent_code char(2) not null,
	continent_name varchar(20) not null,
	country_iso_code char(2) not null,
	country_name varchar(128) not null,
	subdivision_1_iso_code varchar(10) null,
	subdivision_1_name varchar(100) null,
	subdivision_2_iso_code varchar(10) null,
	subdivision_2_name varchar(100),
	city_name varchar(100) null,
	metro_code varchar(100) null,
	time_zone varchar(100) null
);

load data local infile 'GeoLite2-City-Locations-en.csv' into table geolite2_city_locations_en character set utf8 columns terminated by ',' optionally enclosed by '"'  lines terminated by '\n' ignore 1 lines;


create table geolite2_city_blocks
(
	network varchar (20) primary key,
	geoname_id int not null,
	registered_country_geoname_id int null,
	represented_country_geoname_id char(1) null,
	is_anonymous_proxy tinyint not null,
	is_satellite_provider tinyint not null,
	postal_code varchar(10) null,
	latitude double not null,
	longitude double not null
);

load data local infile 'GeoLite2-City-Blocks-IPv4.csv' into table geolite2_city_blocks character set utf8 columns terminated by ',' lines terminated by '\n' ignore 1 lines;

create index geolite2_city_blocks_geoname_id on geolite2_city_blocks(geoname_id);
