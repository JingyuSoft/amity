/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


@interface AmityToken : NSObject <TBase, NSCoding> {
  NSString * __value;

  BOOL __value_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
#endif

- (id) init;
- (id) initWithValue: (NSString *) value;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) value;
- (void) setValue: (NSString *) value;
#endif
- (BOOL) valueIsSet;

@end

@interface SessionCredentials : NSObject <TBase, NSCoding> {
  int64_t __amityUserId;
  AmityToken * __sessionToken;

  BOOL __amityUserId_isset;
  BOOL __sessionToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=amityUserId, setter=setAmityUserId:) int64_t amityUserId;
@property (nonatomic, retain, getter=sessionToken, setter=setSessionToken:) AmityToken * sessionToken;
#endif

- (id) init;
- (id) initWithAmityUserId: (int64_t) amityUserId sessionToken: (AmityToken *) sessionToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) amityUserId;
- (void) setAmityUserId: (int64_t) amityUserId;
#endif
- (BOOL) amityUserIdIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) sessionToken;
- (void) setSessionToken: (AmityToken *) sessionToken;
#endif
- (BOOL) sessionTokenIsSet;

@end

@interface LoginFacebookAccountRequest : NSObject <TBase, NSCoding> {
  NSString * __facebookToken;

  BOOL __facebookToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=facebookToken, setter=setFacebookToken:) NSString * facebookToken;
#endif

- (id) init;
- (id) initWithFacebookToken: (NSString *) facebookToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) facebookToken;
- (void) setFacebookToken: (NSString *) facebookToken;
#endif
- (BOOL) facebookTokenIsSet;

@end

@interface AmityUserDto : NSObject <TBase, NSCoding> {
  int64_t __amityUserId;
  NSString * __userType;
  NSString * __username;
  NSString * __firstName;
  NSString * __lastName;
  NSString * __emailAddress;
  NSString * __gender;
  NSString * __userAlias;
  NSData * __avatar;

  BOOL __amityUserId_isset;
  BOOL __userType_isset;
  BOOL __username_isset;
  BOOL __firstName_isset;
  BOOL __lastName_isset;
  BOOL __emailAddress_isset;
  BOOL __gender_isset;
  BOOL __userAlias_isset;
  BOOL __avatar_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=amityUserId, setter=setAmityUserId:) int64_t amityUserId;
@property (nonatomic, retain, getter=userType, setter=setUserType:) NSString * userType;
@property (nonatomic, retain, getter=username, setter=setUsername:) NSString * username;
@property (nonatomic, retain, getter=firstName, setter=setFirstName:) NSString * firstName;
@property (nonatomic, retain, getter=lastName, setter=setLastName:) NSString * lastName;
@property (nonatomic, retain, getter=emailAddress, setter=setEmailAddress:) NSString * emailAddress;
@property (nonatomic, retain, getter=gender, setter=setGender:) NSString * gender;
@property (nonatomic, retain, getter=userAlias, setter=setUserAlias:) NSString * userAlias;
@property (nonatomic, retain, getter=avatar, setter=setAvatar:) NSData * avatar;
#endif

- (id) init;
- (id) initWithAmityUserId: (int64_t) amityUserId userType: (NSString *) userType username: (NSString *) username firstName: (NSString *) firstName lastName: (NSString *) lastName emailAddress: (NSString *) emailAddress gender: (NSString *) gender userAlias: (NSString *) userAlias avatar: (NSData *) avatar;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) amityUserId;
- (void) setAmityUserId: (int64_t) amityUserId;
#endif
- (BOOL) amityUserIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userType;
- (void) setUserType: (NSString *) userType;
#endif
- (BOOL) userTypeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) username;
- (void) setUsername: (NSString *) username;
#endif
- (BOOL) usernameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) firstName;
- (void) setFirstName: (NSString *) firstName;
#endif
- (BOOL) firstNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) lastName;
- (void) setLastName: (NSString *) lastName;
#endif
- (BOOL) lastNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) emailAddress;
- (void) setEmailAddress: (NSString *) emailAddress;
#endif
- (BOOL) emailAddressIsSet;

#if !__has_feature(objc_arc)
- (NSString *) gender;
- (void) setGender: (NSString *) gender;
#endif
- (BOOL) genderIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userAlias;
- (void) setUserAlias: (NSString *) userAlias;
#endif
- (BOOL) userAliasIsSet;

#if !__has_feature(objc_arc)
- (NSData *) avatar;
- (void) setAvatar: (NSData *) avatar;
#endif
- (BOOL) avatarIsSet;

@end

@interface LoginFacebookAccountResponse : NSObject <TBase, NSCoding> {
  int32_t __errorCode;
  int64_t __amityUserId;
  AmityToken * __authToken;
  AmityToken * __sessionToken;
  AmityUserDto * __amityUser;

  BOOL __errorCode_isset;
  BOOL __amityUserId_isset;
  BOOL __authToken_isset;
  BOOL __sessionToken_isset;
  BOOL __amityUser_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=errorCode, setter=setErrorCode:) int32_t errorCode;
@property (nonatomic, getter=amityUserId, setter=setAmityUserId:) int64_t amityUserId;
@property (nonatomic, retain, getter=authToken, setter=setAuthToken:) AmityToken * authToken;
@property (nonatomic, retain, getter=sessionToken, setter=setSessionToken:) AmityToken * sessionToken;
@property (nonatomic, retain, getter=amityUser, setter=setAmityUser:) AmityUserDto * amityUser;
#endif

- (id) init;
- (id) initWithErrorCode: (int32_t) errorCode amityUserId: (int64_t) amityUserId authToken: (AmityToken *) authToken sessionToken: (AmityToken *) sessionToken amityUser: (AmityUserDto *) amityUser;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) errorCode;
- (void) setErrorCode: (int32_t) errorCode;
#endif
- (BOOL) errorCodeIsSet;

#if !__has_feature(objc_arc)
- (int64_t) amityUserId;
- (void) setAmityUserId: (int64_t) amityUserId;
#endif
- (BOOL) amityUserIdIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) authToken;
- (void) setAuthToken: (AmityToken *) authToken;
#endif
- (BOOL) authTokenIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) sessionToken;
- (void) setSessionToken: (AmityToken *) sessionToken;
#endif
- (BOOL) sessionTokenIsSet;

#if !__has_feature(objc_arc)
- (AmityUserDto *) amityUser;
- (void) setAmityUser: (AmityUserDto *) amityUser;
#endif
- (BOOL) amityUserIsSet;

@end

@interface LoginAmityAccountRequest : NSObject <TBase, NSCoding> {
  NSString * __emailAddress;
  NSString * __plainPassword;

  BOOL __emailAddress_isset;
  BOOL __plainPassword_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=emailAddress, setter=setEmailAddress:) NSString * emailAddress;
@property (nonatomic, retain, getter=plainPassword, setter=setPlainPassword:) NSString * plainPassword;
#endif

- (id) init;
- (id) initWithEmailAddress: (NSString *) emailAddress plainPassword: (NSString *) plainPassword;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) emailAddress;
- (void) setEmailAddress: (NSString *) emailAddress;
#endif
- (BOOL) emailAddressIsSet;

#if !__has_feature(objc_arc)
- (NSString *) plainPassword;
- (void) setPlainPassword: (NSString *) plainPassword;
#endif
- (BOOL) plainPasswordIsSet;

@end

@interface LoginAmityAccountResponse : NSObject <TBase, NSCoding> {
  int32_t __errorCode;
  AmityToken * __sessionToken;
  AmityUserDto * __amityUser;

  BOOL __errorCode_isset;
  BOOL __sessionToken_isset;
  BOOL __amityUser_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=errorCode, setter=setErrorCode:) int32_t errorCode;
@property (nonatomic, retain, getter=sessionToken, setter=setSessionToken:) AmityToken * sessionToken;
@property (nonatomic, retain, getter=amityUser, setter=setAmityUser:) AmityUserDto * amityUser;
#endif

- (id) init;
- (id) initWithErrorCode: (int32_t) errorCode sessionToken: (AmityToken *) sessionToken amityUser: (AmityUserDto *) amityUser;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) errorCode;
- (void) setErrorCode: (int32_t) errorCode;
#endif
- (BOOL) errorCodeIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) sessionToken;
- (void) setSessionToken: (AmityToken *) sessionToken;
#endif
- (BOOL) sessionTokenIsSet;

#if !__has_feature(objc_arc)
- (AmityUserDto *) amityUser;
- (void) setAmityUser: (AmityUserDto *) amityUser;
#endif
- (BOOL) amityUserIsSet;

@end

@interface AuthenticateAmityAccountRequest : NSObject <TBase, NSCoding> {
  int64_t __amityUserId;
  AmityToken * __authToken;

  BOOL __amityUserId_isset;
  BOOL __authToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=amityUserId, setter=setAmityUserId:) int64_t amityUserId;
@property (nonatomic, retain, getter=authToken, setter=setAuthToken:) AmityToken * authToken;
#endif

- (id) init;
- (id) initWithAmityUserId: (int64_t) amityUserId authToken: (AmityToken *) authToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) amityUserId;
- (void) setAmityUserId: (int64_t) amityUserId;
#endif
- (BOOL) amityUserIdIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) authToken;
- (void) setAuthToken: (AmityToken *) authToken;
#endif
- (BOOL) authTokenIsSet;

@end

@interface AuthenticateAmityAccountResponse : NSObject <TBase, NSCoding> {
  int32_t __errorCode;
  AmityToken * __sessionToken;
  AmityUserDto * __amityUser;

  BOOL __errorCode_isset;
  BOOL __sessionToken_isset;
  BOOL __amityUser_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=errorCode, setter=setErrorCode:) int32_t errorCode;
@property (nonatomic, retain, getter=sessionToken, setter=setSessionToken:) AmityToken * sessionToken;
@property (nonatomic, retain, getter=amityUser, setter=setAmityUser:) AmityUserDto * amityUser;
#endif

- (id) init;
- (id) initWithErrorCode: (int32_t) errorCode sessionToken: (AmityToken *) sessionToken amityUser: (AmityUserDto *) amityUser;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) errorCode;
- (void) setErrorCode: (int32_t) errorCode;
#endif
- (BOOL) errorCodeIsSet;

#if !__has_feature(objc_arc)
- (AmityToken *) sessionToken;
- (void) setSessionToken: (AmityToken *) sessionToken;
#endif
- (BOOL) sessionTokenIsSet;

#if !__has_feature(objc_arc)
- (AmityUserDto *) amityUser;
- (void) setAmityUser: (AmityUserDto *) amityUser;
#endif
- (BOOL) amityUserIsSet;

@end

@interface UpdateAmityAccountRequest : NSObject <TBase, NSCoding> {
  int64_t __amityUserId;
  NSString * __username;
  NSString * __firstName;
  NSString * __lastName;
  NSString * __gender;
  NSString * __userAlias;
  NSData * __avatar;

  BOOL __amityUserId_isset;
  BOOL __username_isset;
  BOOL __firstName_isset;
  BOOL __lastName_isset;
  BOOL __gender_isset;
  BOOL __userAlias_isset;
  BOOL __avatar_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=amityUserId, setter=setAmityUserId:) int64_t amityUserId;
@property (nonatomic, retain, getter=username, setter=setUsername:) NSString * username;
@property (nonatomic, retain, getter=firstName, setter=setFirstName:) NSString * firstName;
@property (nonatomic, retain, getter=lastName, setter=setLastName:) NSString * lastName;
@property (nonatomic, retain, getter=gender, setter=setGender:) NSString * gender;
@property (nonatomic, retain, getter=userAlias, setter=setUserAlias:) NSString * userAlias;
@property (nonatomic, retain, getter=avatar, setter=setAvatar:) NSData * avatar;
#endif

- (id) init;
- (id) initWithAmityUserId: (int64_t) amityUserId username: (NSString *) username firstName: (NSString *) firstName lastName: (NSString *) lastName gender: (NSString *) gender userAlias: (NSString *) userAlias avatar: (NSData *) avatar;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int64_t) amityUserId;
- (void) setAmityUserId: (int64_t) amityUserId;
#endif
- (BOOL) amityUserIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) username;
- (void) setUsername: (NSString *) username;
#endif
- (BOOL) usernameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) firstName;
- (void) setFirstName: (NSString *) firstName;
#endif
- (BOOL) firstNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) lastName;
- (void) setLastName: (NSString *) lastName;
#endif
- (BOOL) lastNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) gender;
- (void) setGender: (NSString *) gender;
#endif
- (BOOL) genderIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userAlias;
- (void) setUserAlias: (NSString *) userAlias;
#endif
- (BOOL) userAliasIsSet;

#if !__has_feature(objc_arc)
- (NSData *) avatar;
- (void) setAvatar: (NSData *) avatar;
#endif
- (BOOL) avatarIsSet;

@end

@interface UpdateAmityAccountResponse : NSObject <TBase, NSCoding> {
  int32_t __errorCode;

  BOOL __errorCode_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=errorCode, setter=setErrorCode:) int32_t errorCode;
#endif

- (id) init;
- (id) initWithErrorCode: (int32_t) errorCode;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) errorCode;
- (void) setErrorCode: (int32_t) errorCode;
#endif
- (BOOL) errorCodeIsSet;

@end

@protocol AuthenticationThriftService <NSObject>
- (LoginFacebookAccountResponse *) loginFacebookAccount: (LoginFacebookAccountRequest *) request;  // throws TException
- (LoginAmityAccountResponse *) loginAmityAccount: (LoginAmityAccountRequest *) request;  // throws TException
- (AuthenticateAmityAccountResponse *) authenticateAmityAccount: (AuthenticateAmityAccountRequest *) request;  // throws TException
- (UpdateAmityAccountResponse *) updateAmityAccount: (UpdateAmityAccountRequest *) request credentials: (SessionCredentials *) credentials;  // throws TException
@end

@interface AuthenticationThriftServiceClient : NSObject <AuthenticationThriftService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AuthenticationThriftServiceProcessor : NSObject <TProcessor> {
  id <AuthenticationThriftService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithAuthenticationThriftService: (id <AuthenticationThriftService>) service;
- (id<AuthenticationThriftService>) service;
@end

@interface AuthenticationConstants : NSObject {
}
@end
